{"ast":null,"code":"var _jsxFileName = \"/Users/pratiksondaule/Desktop/loginAndRegister/client/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport \"./login.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // const handleChange = async (e) => {\n  //     e.preventDefault();\n  //     try {\n\n  //     } catch (error) {\n  //         console.log(error);\n\n  //     }\n  // }\n\n  const handleClick = async e => {\n    e.preventDefault();\n    const res = await fetch(\"http://localost:8080/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await res.json();\n    if (res.status === 400 || !data) {\n      window.alert(\"Invalid Credentials\");\n    } else {\n      window.alert(\"Login Successfull\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        onClick: handleClick,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New User? \", /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/register\",\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["NavLink","useNavigate","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","handleClick","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","value","onChange","target","onClick","to","_c","$RefreshReg$"],"sources":["/Users/pratiksondaule/Desktop/loginAndRegister/client/src/components/Login/Login.js"],"sourcesContent":["import \"./login.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Login = () => {\n\n    // const navigate = useNavigate();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    // const handleChange = async (e) => {\n    //     e.preventDefault();\n    //     try {\n            \n    //     } catch (error) {\n    //         console.log(error);\n\n    //     }\n    // }\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n\n        const res = await fetch(\"http://localost:8080/login\",{\n            method: \"POST\",\n            headers:{\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email, password\n            })\n        });\n\n        const data = await res.json();\n\n        if(res.status === 400 || !data){\n            window.alert(\"Invalid Credentials\");\n        }else{\n            window.alert(\"Login Successfull\")\n        }\n    }\n\n\n    return (\n        <div className=\"login\">\n            <h1>Login</h1>\n\n\n            <form method=\"POST\" className=\"form\">\n                <input name=\"email\" type=\"email\" placeholder=\"E-mail\" value={email} onChange={(e) => { setEmail(e.target.value) }} className=\"input\" />\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => { setPassword(e.target.value) }} className=\"input\" />\n                <button type=\"submit\" className=\"btn\" onClick={handleClick}>Login</button>\n            </form>\n\n\n\n            <p>Or</p>\n            <p>New User? <NavLink to=\"/register\">SignUp</NavLink> </p>\n        </div>\n    )\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}