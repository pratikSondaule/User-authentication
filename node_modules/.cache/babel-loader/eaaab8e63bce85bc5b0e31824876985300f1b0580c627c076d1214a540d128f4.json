{"ast":null,"code":"var _jsxFileName = \"/Users/pratiksondaule/Desktop/loginAndRegister/client/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport \"./login.css\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleSubmit = async user => {\n    const res = await axios.post(\"http://localhost:8080/auth/register\", user);\n    const data = res.json;\n    if (res.status === 400 || !data) {\n      window.alert(\"Invalid Credentials\");\n    } else {\n      window.alert(\"Login Successfull\");\n      navigate(\"/\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: yup.object({\n        email: yup.string(),\n        password: yup.string()\n      }),\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"E-mail\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New User? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Field","Form","Formik","yup","axios","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","handleSubmit","user","res","post","data","json","status","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","email","password","validationSchema","object","string","onSubmit","name","type","placeholder","to","_c","$RefreshReg$"],"sources":["/Users/pratiksondaule/Desktop/loginAndRegister/client/src/components/Login/Login.js"],"sourcesContent":["import \"./login.css\";\nimport { Field, Form, Formik} from \"formik\";\nimport * as yup from \"yup\"\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n\n    const navigate = useNavigate();\n\n    const handleSubmit = async (user) => {\n        const res = await axios.post(\"http://localhost:8080/auth/register\", user);\n        const data = res.json\n\n        if(res.status === 400 || !data){\n            window.alert(\"Invalid Credentials\")\n        }else{\n            window.alert(\"Login Successfull\");\n            navigate(\"/\")\n        }\n    }\n    \n\n    return(\n        <div className=\"login\">\n            <h1>Login</h1>\n            <Formik\n                initialValues={\n                    {\n                        email:\"\",\n                        password:\"\"\n                    }\n                }\n                validationSchema={\n                    yup.object({\n                        email: yup.string(),\n                        password: yup.string()\n                    })\n                }\n                onSubmit={handleSubmit}\n            >\n            {\n                <Form className=\"form\">\n                    <Field name=\"email\" type=\"email\" placeholder=\"E-mail\" className=\"input\" />\n                    <Field name=\"password\" type=\"password\" placeholder=\"Password\" className=\"input\" />\n                    <button type=\"submit\" className=\"btn\">Login</button>\n                </Form>\n            }\n\n            </Formik>\n            <p>Or</p>\n            <p>New User? <Link to=\"/register\">SignUp</Link> </p>\n        </div>\n    )\n}\n\nexport default Login"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAO,QAAQ;AAC3C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAE9B,MAAMM,YAAY,GAAG,MAAOC,IAAI,IAAK;IACjC,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,qCAAqC,EAAEF,IAAI,CAAC;IACzE,MAAMG,IAAI,GAAGF,GAAG,CAACG,IAAI;IAErB,IAAGH,GAAG,CAACI,MAAM,KAAK,GAAG,IAAI,CAACF,IAAI,EAAC;MAC3BG,MAAM,CAACC,KAAK,CAAC,qBAAqB,CAAC;IACvC,CAAC,MAAI;MACDD,MAAM,CAACC,KAAK,CAAC,mBAAmB,CAAC;MACjCT,QAAQ,CAAC,GAAG,CAAC;IACjB;EACJ,CAAC;EAGD,oBACIH,OAAA;IAAKa,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdlB,OAAA,CAACN,MAAM;MACHyB,aAAa,EACT;QACIC,KAAK,EAAC,EAAE;QACRC,QAAQ,EAAC;MACb,CACH;MACDC,gBAAgB,EACZ3B,GAAG,CAAC4B,MAAM,CAAC;QACPH,KAAK,EAAEzB,GAAG,CAAC6B,MAAM,EAAE;QACnBH,QAAQ,EAAE1B,GAAG,CAAC6B,MAAM;MACxB,CAAC,CACJ;MACDC,QAAQ,EAAErB,YAAa;MAAAU,QAAA,eAGvBd,OAAA,CAACP,IAAI;QAACoB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAClBd,OAAA,CAACR,KAAK;UAACkC,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,OAAO;UAACC,WAAW,EAAC,QAAQ;UAACf,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC1ElB,OAAA,CAACR,KAAK;UAACkC,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC,UAAU;UAACf,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAClFlB,OAAA;UAAQ2B,IAAI,EAAC,QAAQ;UAACd,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACjD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGF,eACTlB,OAAA;MAAAc,QAAA,EAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACTlB,OAAA;MAAAc,QAAA,GAAG,YAAU,eAAAd,OAAA,CAACH,IAAI;QAACgC,EAAE,EAAC,WAAW;QAAAf,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClD;AAEd,CAAC;AAAAhB,EAAA,CAhDKD,KAAK;EAAA,QAEUH,WAAW;AAAA;AAAAgC,EAAA,GAF1B7B,KAAK;AAkDX,eAAeA,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}