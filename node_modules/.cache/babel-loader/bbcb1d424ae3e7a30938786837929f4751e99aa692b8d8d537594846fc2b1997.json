{"ast":null,"code":"var _jsxFileName = \"/Users/pratiksondaule/Desktop/loginAndRegister/client/src/components/Register/Register.js\";\nimport \"./register.css\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        cpassword: \"\"\n      },\n      validationSchema: yup.object({\n        name: yup.string(),\n        email: yup.string(),\n        password: yup.string(),\n        cpassword: yup.string()\n      }),\n      onSubmit: user => {\n        if (user.password === user.cpassword) {\n          axios.post(\"http://localhost:8080/auth/register\");\n        } else {\n          alert(\"Fill the form completely\");\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name\",\n          className: \"input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"E-mail\",\n          className: \"input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          className: \"input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"SignUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Already a user? Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Field","Form","Formik","yup","axios","jsxDEV","_jsxDEV","Register","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","name","email","password","cpassword","validationSchema","object","string","onSubmit","user","post","alert","type","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/pratiksondaule/Desktop/loginAndRegister/client/src/components/Register/Register.js"],"sourcesContent":["import \"./register.css\";\nimport { Field, Form, Formik} from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\"\n\nconst Register = () => {\n    return(\n        <div className=\"register\">\n            <h1>SignUp</h1>\n            <Formik\n                initialValues={\n                    {\n                        name:\"\",\n                        email:\"\",\n                        password:\"\",\n                        cpassword:\"\"\n                    }\n                }\n                validationSchema={\n                    yup.object({\n                        name: yup.string(),\n                        email: yup.string(),\n                        password: yup.string(),\n                        cpassword: yup.string()\n                    })\n                }\n                onSubmit={\n                    (user) => {\n                        if(user.password === user.cpassword){\n                            axios.post(\"http://localhost:8080/auth/register\")\n                        }else{\n                            alert(\"Fill the form completely\")\n                        }\n                    }\n                }\n            >\n            {\n                <Form className=\"form\">\n                    <Field name=\"name\" type=\"text\" placeholder=\"Name\" className=\"input\" required />\n                    <Field name=\"email\" type=\"email\" placeholder=\"E-mail\" className=\"input\" required />\n                    <Field name=\"password\" type=\"password\" placeholder=\"Password\" className=\"input\" required />\n                    <Field name=\"password\" type=\"password\" placeholder=\"Confirm Password\" className=\"input\" required />\n                    <button className=\"btn\">SignUp</button>\n                </Form>\n            }\n\n            </Formik>\n            <p>Or</p>\n            <p>Already a user? Login</p>\n        </div>\n    )\n}\n\nexport default Register"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,SAASA,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAO,QAAQ;AAC3C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACID,OAAA;IAAKE,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBH,OAAA;MAAAG,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACfP,OAAA,CAACJ,MAAM;MACHY,aAAa,EACT;QACIC,IAAI,EAAC,EAAE;QACPC,KAAK,EAAC,EAAE;QACRC,QAAQ,EAAC,EAAE;QACXC,SAAS,EAAC;MACd,CACH;MACDC,gBAAgB,EACZhB,GAAG,CAACiB,MAAM,CAAC;QACPL,IAAI,EAAEZ,GAAG,CAACkB,MAAM,EAAE;QAClBL,KAAK,EAAEb,GAAG,CAACkB,MAAM,EAAE;QACnBJ,QAAQ,EAAEd,GAAG,CAACkB,MAAM,EAAE;QACtBH,SAAS,EAAEf,GAAG,CAACkB,MAAM;MACzB,CAAC,CACJ;MACDC,QAAQ,EACHC,IAAI,IAAK;QACN,IAAGA,IAAI,CAACN,QAAQ,KAAKM,IAAI,CAACL,SAAS,EAAC;UAChCd,KAAK,CAACoB,IAAI,CAAC,qCAAqC,CAAC;QACrD,CAAC,MAAI;UACDC,KAAK,CAAC,0BAA0B,CAAC;QACrC;MACJ,CACH;MAAAhB,QAAA,eAGDH,OAAA,CAACL,IAAI;QAACO,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAClBH,OAAA,CAACN,KAAK;UAACe,IAAI,EAAC,MAAM;UAACW,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,MAAM;UAACnB,SAAS,EAAC,OAAO;UAACoB,QAAQ;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC/EP,OAAA,CAACN,KAAK;UAACe,IAAI,EAAC,OAAO;UAACW,IAAI,EAAC,OAAO;UAACC,WAAW,EAAC,QAAQ;UAACnB,SAAS,EAAC,OAAO;UAACoB,QAAQ;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACnFP,OAAA,CAACN,KAAK;UAACe,IAAI,EAAC,UAAU;UAACW,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC,UAAU;UAACnB,SAAS,EAAC,OAAO;UAACoB,QAAQ;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC3FP,OAAA,CAACN,KAAK;UAACe,IAAI,EAAC,UAAU;UAACW,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC,kBAAkB;UAACnB,SAAS,EAAC,OAAO;UAACoB,QAAQ;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACnGP,OAAA;UAAQE,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGF,eACTP,OAAA;MAAAG,QAAA,EAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACTP,OAAA;MAAAG,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1B;AAEd,CAAC;AAAAgB,EAAA,GA9CKtB,QAAQ;AAgDd,eAAeA,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}